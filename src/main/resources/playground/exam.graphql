query exam($examId: ID!) {
    exam(id: $examId) {
        id
        authorId
        name
        description
        price
        subject
        durationInMinutes
    }
}

query exam_pagination($first: Int!, $after: String) {
    exams(first: $first, after: $after) {
        edges {
            cursor
            node {
                id
                authorId
                name
                description
                price
                subject
                durationInMinutes
            }
        }
        pageInfo {
            hasPreviousPage
            hasNextPage
            startCursor
            endCursor
        }
    }
}

mutation exam_add($authorId: ID!, $examInput: ExamInput!) {
    addExam(authorId: $authorId, input: $examInput) {
        id
        name
        description
        price
        subject
        durationInMinutes
    }
}

mutation exam_update($examId: ID!, $authorId: ID!, $examInput: ExamInput!) {
    updateExam(id: $examId, authorId: $authorId, input: $examInput) {
        id
        name
        description
        price
        subject
        durationInMinutes
    }
}

# Deactivate ( Archive; Soft - delete )
mutation exam_freeze($examId: ID!, $authorId: ID!) {
    freezeExam(id: $examId, authorId: $authorId)
}